from constructs import Construct
from cdk_constructs.managed_secret import ManagedSecret
from cdktf_cdktf_provider_random.password import Password
import json


class Secrets(Construct):
    def __init__(
        self,
        scope: Construct,
        id: str,
        db_endpoint: str = "",
        s3_bucket_name: str = "",
    ) -> None:
        super().__init__(scope, id)
        
        # Generate secure random passwords using Terraform random provider
        self.jwt_secret = Password(
            self,
            "jwt_secret_password",
            length=64,
            special=False,  # Only alphanumeric for JWT compatibility
        )
        
        self.analytics_key = Password(
            self,
            "analytics_key_password", 
            length=32,
            special=True,
        )
        
        self.dashboard_password = Password(
            self,
            "dashboard_password",
            length=32,
            special=True,
        )

        # JWT secrets (all in one secret as JSON) - using Terraform random provider
        # Note: anon_key and service_role_key can be generated by Supabase using the main secret
        jwt_secrets = {
            "secret": self.jwt_secret.result,
            "anon_key": "GENERATED_BY_SUPABASE",  # Supabase will generate this using the secret
            "service_role_key": "GENERATED_BY_SUPABASE"  # Supabase will generate this using the secret
        }
        ManagedSecret(
            self, 
            "jwt_secret", 
            name="supabase/jwt", 
            secret_string=json.dumps(jwt_secrets)
        )

        # Database secrets (all in one secret as JSON)
        # Extract hostname from RDS endpoint (remove port if present)
        db_host = db_endpoint.split(":")[0] if db_endpoint and ":" in db_endpoint else db_endpoint if db_endpoint else "CHANGE_ME_DB_HOST"
        
        # Note: For RDS, we use the auto-generated secret for credentials
        # This secret is mainly for host and database name (not used for auth)
        db_secrets = {
            "username": "supabase",
            "database": "supabase",
            "host": db_host
        }
        ManagedSecret(
            self, 
            "database_secret", 
            name="supabase/database", 
            secret_string=json.dumps(db_secrets)
        )

        # Analytics secrets - using Terraform random provider
        analytics_secrets = {
            "logflare_api_key": self.analytics_key.result
        }
        ManagedSecret(
            self, 
            "analytics_secret", 
            name="supabase/analytics", 
            secret_string=json.dumps(analytics_secrets)
        )

        # Dashboard secrets - using Terraform random provider
        dashboard_secrets = {
            "username": "supabase", 
            "password": self.dashboard_password.result
        }
        ManagedSecret(
            self, 
            "dashboard_secret", 
            name="supabase/dashboard", 
            secret_string=json.dumps(dashboard_secrets)
        )

        # S3 secrets (for chart compatibility, though IRSA is used)
        s3_secrets = {
            "bucket_name": s3_bucket_name or "CHANGE_ME_S3_BUCKET",
            "region": "us-east-1",
            "access_key_id": "NOT_USED_WITH_IRSA",
            "secret_access_key": "NOT_USED_WITH_IRSA"
        }
        ManagedSecret(
            self, 
            "s3_secret", 
            name="supabase/s3", 
            secret_string=json.dumps(s3_secrets)
        )
