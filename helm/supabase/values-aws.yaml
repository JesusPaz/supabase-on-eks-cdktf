# Supabase configuration for AWS EKS with External RDS and S3
# Using External Secrets for AWS Secrets Manager integration

# Security configuration - Using External Secrets from AWS Secrets Manager
secret:
  jwt:
    # These will be populated by External Secrets
    secretRef: "supabase-jwt-secret"
    secretRefKey:
      anonKey: "anon-key"
      serviceKey: "service-key"
      secret: "jwt-secret"
  db:
    # These will be populated by External Secrets
    secretRef: "supabase-db"
    secretRefKey:
      username: "username"
      password: "password"
      database: "database"
  analytics:
    # This will be populated by External Secrets
    secretRef: "supabase-analytics-secret"
    secretRefKey:
      apiKey: "api-key"
  dashboard:
    # These will be populated by External Secrets
    secretRef: "supabase-dashboard-secret"
    secretRefKey:
      username: "username"
      password: "password"
  s3:
    # S3 access via IRSA (no keys needed)
    secretRef: "supabase-s3-secret"
    secretRefKey:
      keyId: "access-key-id"  # Not used with IRSA
      accessKey: "secret-access-key"  # Not used with IRSA

# Database configuration (External RDS)
db:
  enabled: false  # Using external RDS PostgreSQL

# Studio configuration
studio:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/studio
    tag: "2025.09.15-sha-6cff20b"
    pullPolicy: IfNotPresent
  environment:
    # Studio configuration
    STUDIO_DEFAULT_ORGANIZATION: "Default Organization"
    STUDIO_DEFAULT_PROJECT: "Default Project"
    STUDIO_PORT: "3000"
    SUPABASE_PUBLIC_URL: "https://supabase.stack-ai.jesuspaz.com"
    NEXT_PUBLIC_ENABLE_LOGS: "true"
    NEXT_ANALYTICS_BACKEND_PROVIDER: "postgres"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

# Auth service configuration
auth:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/gotrue
    tag: "v2.179.0"
    pullPolicy: IfNotPresent
  environment:
    DB_PORT: "5432"
    DB_DRIVER: "postgres"
    DB_SSL: "disable"
    DB_USER: "supabase_auth_admin"
    # DB_HOST will be injected from External Secrets, but keeping for init containers
    DB_HOST: "supabase.cviyu0s8wh17.us-east-1.rds.amazonaws.com"
    API_EXTERNAL_URL: "https://supabase.stack-ai.jesuspaz.com"
    GOTRUE_API_HOST: "0.0.0.0"
    GOTRUE_API_PORT: "9999"
    GOTRUE_SITE_URL: "https://supabase.stack-ai.jesuspaz.com"
    GOTRUE_URI_ALLOW_LIST: "*"
    GOTRUE_DISABLE_SIGNUP: "false"
    GOTRUE_JWT_DEFAULT_GROUP_NAME: "authenticated"
    GOTRUE_JWT_ADMIN_ROLES: "service_role"
    GOTRUE_JWT_AUD: "authenticated"
    GOTRUE_JWT_EXP: "3600"
    GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
    GOTRUE_MAILER_AUTOCONFIRM: "true"
    GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
    GOTRUE_SMS_AUTOCONFIRM: "false"
    GOTRUE_MAILER_URLPATHS_INVITE: "/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_CONFIRMATION: "/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_RECOVERY: "/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "/auth/v1/verify"
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# REST API (PostgREST) configuration
rest:
  enabled: true
  replicaCount: 1
  image:
    repository: postgrest/postgrest
    tag: "v12.0.2"
    pullPolicy: IfNotPresent
  environment:
    DB_USER: "authenticator"
    DB_PORT: "5432"
    DB_DRIVER: "postgres"
    DB_SSL: "disable"
    # DB_HOST will be injected from External Secrets, but keeping for init containers
    DB_HOST: "supabase.cviyu0s8wh17.us-east-1.rds.amazonaws.com"
    PGRST_DB_SCHEMAS: "public,storage,graphql_public"
    PGRST_DB_ANON_ROLE: "anon"
    PGRST_DB_USE_LEGACY_GUCS: "false"
    PGRST_APP_SETTINGS_JWT_EXP: "3600"
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70

# Realtime service configuration
realtime:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/realtime
    tag: "v2.20.0"
    pullPolicy: IfNotPresent
  environment:
    DB_USER: "supabase_admin"
    DB_PORT: "5432"
    DB_DRIVER: "postgres"
    DB_SSL: "disable"
    # DB_HOST will be injected from External Secrets, but keeping for init containers
    DB_HOST: "supabase.cviyu0s8wh17.us-east-1.rds.amazonaws.com"
    DB_AFTER_CONNECT_QUERY: "SET search_path TO _realtime"
    PORT: "4000"
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70

# Meta service configuration
meta:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/postgres-meta
    tag: "v0.91.6"
    pullPolicy: IfNotPresent
  environment:
    # Database connection configuration
    PG_META_PORT: "8080"
    DB_PORT: "5432"
    DB_DRIVER: "postgres"
    DB_SSL: "disable"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

# Storage service configuration (S3 backend)
storage:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/storage-api
    tag: "v0.43.0"
    pullPolicy: IfNotPresent
  environment:
    STORAGE_BACKEND: "s3"
    AWS_DEFAULT_REGION: "us-east-1"
    GLOBAL_S3_PROTOCOL: "https"
    GLOBAL_S3_FORCE_PATH_STYLE: "false"
    FILE_SIZE_LIMIT: "52428800"
    TENANT_ID: "stub"
    REGION: "stub"
    DB_USER: "supabase_storage_admin"
    DB_PORT: "5432"
    DB_DRIVER: "postgres"
    DB_SSL: "disable"
    # DB_HOST will be injected from External Secrets, but keeping for init containers
    DB_HOST: "supabase.cviyu0s8wh17.us-east-1.rds.amazonaws.com"
    PGOPTIONS: "-c search_path=storage,public"
  serviceAccount:
    create: true
    name: supabase-storage
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::851725652296:role/supabase-on-eks-app-s3-20250918044322522300000007"
  persistence:
    enabled: false  # Using S3, not local storage
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 70

# Image Proxy configuration
imgproxy:
  enabled: true
  replicaCount: 1
  image:
    repository: darthsim/imgproxy
    tag: "v3.17.0"
    pullPolicy: IfNotPresent
  persistence:
    enabled: false  # Imgproxy doesn't need persistent storage
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

# Kong Gateway configuration
kong:
  enabled: true
  replicaCount: 1
  image:
    repository: kong
    tag: "3.6.1"
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    className: "alb"
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/group.name: production
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:851725652296:certificate/448e98db-b7cd-4efb-b8d0-94bdf6fb2c6a
      alb.ingress.kubernetes.io/subnets: subnet-0216a3f2ad3743f9c,subnet-006fa14e9d72b0312,subnet-0d53c9c338fb936c6
    hosts:
      - host: supabase.stack-ai.jesuspaz.com
        paths:
          - path: /
            pathType: Prefix
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

# Analytics configuration
analytics:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/logflare
    tag: "1.4.0"
    pullPolicy: IfNotPresent
  environment:
    LOGFLARE_NODE_HOST: "127.0.0.1"
    DB_USERNAME: "supabase_admin"
    DB_PORT: "5432"
    DB_DRIVER: "postgresql"
    DB_SCHEMA: "_analytics"
    LOGFLARE_SINGLE_TENANT: "true"
    LOGFLARE_SUPABASE_MODE: "true"
    FEATURE_FLAG_OVERRIDE: "multibackend=true"
    # DB_HOST will be injected from External Secrets, but keeping for init containers
    DB_HOST: "supabase.cviyu0s8wh17.us-east-1.rds.amazonaws.com"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

# Vector configuration
vector:
  enabled: true
  replicaCount: 1
  image:
    repository: timberio/vector
    tag: "0.37.0"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80

# Functions configuration
functions:
  enabled: true
  replicaCount: 1
  image:
    repository: supabase/edge-runtime
    tag: "v1.58.2"
    pullPolicy: IfNotPresent
  environment:
    DB_USERNAME: "supabase_functions_admin"
    DB_PORT: "5432"
    DB_DRIVER: "postgresql"
    DB_SSL: "disable"
    # DB_HOST will be injected from External Secrets, but keeping for init containers
    DB_HOST: "supabase.cviyu0s8wh17.us-east-1.rds.amazonaws.com"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

# Minio configuration (disabled - using S3)
minio:
  enabled: false
